<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<title>Untitled Document</title>
		<script type=text/javascript charset=utf-8>
			
				/**
				 * 	 数组本身也是对象
				 * 	 js中数组类似于java里的map容器 长度可随意改变 ,元素类型任意
				 * 
				 */
				//  var arr = new Array();
				// 	var arr = [1,2,3,4,true ,'abc' , new Date()] ;
				//  alert(arr.length);
				//  arr.length = 5 ;
				//  alert(arr.toString()); // [object object]
				
				
				/**
				 *  push 和 pop 方法
				 */
				//var arr = [new Date(),false] ;
				//var result = arr.push(1,2,true);	//push方法向数组中追加元素(返回值为新数组的长度)
				//alert(arr);
				//alert(result);
				//var obj = arr.pop();		//从数组的尾部移除一个元素(返回值为移除的元素)
				//alert(arr);
				//alert(obj);
				
				/**
				 * shift 和 unshift 方法
				 */
				//var  arr = [1,2,3, true , new Date()];
				//var r1 = arr.shift();			//从头部移除一个元素(返回移除的元素)
				//alert(arr);
				//alert(r1);
				//var r2 = arr.unshift(10,false);	//从头部插入多个元素(返回新数组的长度)
				//alert(arr);
				//alert(r2);
				
				/**
				 * splice、slice 方法 (截取的方法)
				 * splice方法操作数组本身
				 * slice方法不操作数组本身
				 * 
				 */
				
				// splice: 第一个参数 :起始位置
				// 		    第二个参数 ：表示截取的个数
				// 			第三个参数以后:表示追加的新元素个数
				
				//var arr = [1,2,3,4,5];
				//arr.splice(1,2,3,4,5);	// 134545
				//alert(arr);
				
				// slice：//返回截取的内容 //截取范围 (左闭右开区间)
				//var arr = [1,2,3,4,5];
				//var reuslt = arr.slice(2,4);   
				//alert(reuslt);		//3,4     
				
				//操作数组的方法: concat join
				
				//var arr1 = [1,2,3];
				//var arr2 = [true , 4 , 5];
				
				//var reuslt = arr1.concat(arr2);		//合并粘连的操作(不操作数组本身)
				//alert(reuslt);
				
				//var result = arr1.join('-');		//在每个元素之间加入内容(不操作数组本身)
				//alert(arr1); 
				//alert(result);
				
				/**
				 * sort排序 
				 * reverse倒叙
				 */
				var arr1 = [5,2,1,4,3];
				var arr2 = [10,2,4,1,7];
				
				//arr1.sort();
				//arr1.reverse();		//倒叙排序 是按照集合的位置进行倒叙的
				//alert(arr1);
				//arr2.sort();
				//alert(arr2);		// 1 10 2 4 7
				
				function compare(value1 , value2){
					if(value1 < value2){
						return -1 ;
					} else if(value1 > value2){
						return 1 ; 
					} else {
						return 0 ;
					}
				}
				arr2.sort(compare);
				alert(arr2);
				
				
				
		</script>
	</head>
	<body>
	</body>
</html>
